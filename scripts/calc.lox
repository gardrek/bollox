var List = require("scripts/list.lox");

class DefaultStack < List {
    init(default) {
        this.default = default;
        super.init();
    }

    pop() {
        var val = super.pop();
        if val {
            return val;
        } else {
            return this.default;
        }
    }
}

var stack = DefaultStack(0);
var input = "";
var wait_for_input = true;

fun concat_list(acc, v) {
    return acc + to_string(v) + ", ";
}

fun print_stack(stack) {
    print "[ " + stack.accumulate("", concat_list) + "]";
}

while wait_for_input {
    input = read();
    if ((input == "quit") or (input == "q") or (input == "exit")) {
        wait_for_input = false;
        print "quitting...";
    } else if input != "" {
        var number = to_number(input);
        if number {
            stack.push(number);
        } else switch input {
            "pop" {
                var a = stack.pop();
                print a;
            }
            "dup" {
                var a = stack.pop();
                stack.push(a);
                stack.push(a);
            }
            "swap" {
                var b = stack.pop();
                var a = stack.pop();
                stack.push(b);
                stack.push(a);
            }
            "add" {
                var b = stack.pop();
                var a = stack.pop();
                stack.push(a + b);
            }
            "sub" {
                var b = stack.pop();
                var a = stack.pop();
                stack.push(a - b);
            }
            "mul" {
                var b = stack.pop();
                var a = stack.pop();
                stack.push(a * b);
            }
            "div" {
                var b = stack.pop();
                var a = stack.pop();
                stack.push(a / b);
            }
            "mod" {
                var b = stack.pop();
                var a = stack.pop();
                stack.push(a % b);
            }
        }
        print_stack(stack);
    }
}
