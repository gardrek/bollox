var List = require("scripts/list.blx");

var HEART_VALUE = 16;

class Mob {
    init(name, max_health) {
        this.name = name;
        this.health = max_health;
        this.max_health = max_health;
    }

    view() {
        return "some sort of moving thing";
    }

    copy(name) {
        var mob = Mob(name, this.max_health);
        mob.health = this.health;
        return mob;
    }
}

class Slime < Mob {
    init(name, color) {
        super.init(name, 1 * HEART_VALUE);
        this.color = color;
    }

    view() {
        return "a large " + this.color + " blob of slime";
    }

    copy(name) {
        var mob = Mob(name, this.max_health);
        mob.health = this.health;
        mob.color = this.color;
        return mob;
    }
}

class Archer < Mob {
    init(name, range) {
        super.init(name, 3 * HEART_VALUE);
        this.range = range;
    }

    view() {
        return "an archer with a " + this.range + " bow";
    }

    copy(name) {
        var mob = Mob(name, this.max_health);
        mob.health = this.health;
        mob.range = this.range;
        return mob;
    }
}

var list = List();

list.push(Slime("Bluey", "Blue"));
list.push(Slime("Greeny", "Green"));
list.push(Archer("Geraldine", "Long"));
list.push(Archer("Sam", "Short"));
list.push(Slime("Violet", "Perble"));
list.push(Archer("Sherley", "Strange"));

fun inspect(mob) {
    print mob.name + " is " + mob.view() + ", and has " + to_string(mob.health / HEART_VALUE) + " hearts of health";
}

list.for_each(inspect);

print to_string(list.count()) + " people ahead of us, Jimmy!";

